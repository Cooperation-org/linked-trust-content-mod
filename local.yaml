version: '3'

services:
  db:
    image: postgres:latest
    hostname: localhost
    ports:
      - 5432:5432
    env_file:
      - './.envs/.production/.postgress'
    volumes:
      - db-data:/var/lib/postgresql/data

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2022-05-26T05-48-41Z
    hostname: localhost
    ports:
      - 9001:9001
      - 9000:9000
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
    volumes:
      - ./${MANIFEST_FILE}:/tmp/manifests/docker-manifest.json
    entrypoint: 'sh'
    command:
      -c "mkdir -p /data/manifests && cp /tmp/manifests/docker-manifest.json /data/manifests/manifest.json && minio server /data --console-address ':9001'"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3
  minio-mc:
    container_name: minio-mc
    image: minio/mc
    hostname: localhost
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 dev devdevdev;
      /usr/bin/mc mb myminio/manifests;
      /usr/bin/mc anonymous set public myminio/manifests;
      " 

  launcher-server:
    image: public.ecr.aws/m3c7p7e9/launcher-server:latest
    hostname: localhost
    build:
      context: ./launcher/server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - './.envs/.production/.launcher-server'
    command: yarn start
    depends_on:
      minio:
        condition: service_healthy

  recording-oracle:
    image: public.ecr.aws/m3c7p7e9/recording-oracle:latest
    hostname: localhost
    build:
      context: ./recording-oracle
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3005:3005"
    env_file:
      - './.envs/.production/.recording-oracle'
    command: yarn start
  
  reputation-oracle:
    image: public.ecr.aws/m3c7p7e9/reputation-oracle:latest
    hostname: localhost
    build:
      context: ./reputation-oracle
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3006:3006"
    env_file:
      - './.envs/.production/.reputation-oracle'
    command: yarn start

  launcher-service:
    image: public.ecr.aws/m3c7p7e9/launcher-service:latest
    hostname: localhost
    build:
      context: ./launcher-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8082:8082"
    env_file:
      - './.envs/.production/.launcher-service'
      - './.envs/.production/.postgress'
    command: /bin/sh "start"
    depends_on:
      - db
      - minio
      - reputation-oracle
      - recording-oracle
      - launcher-server

  launcher-client:
    image: public.ecr.aws/m3c7p7e9/launcher-client:latest
    hostname: localhost
    build:
      context: ./launcher/client
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - './.envs/.production/.launcher-client'
    command: yarn start
    depends_on:
      - launcher-service

  exchange-client:
    image: public.ecr.aws/m3c7p7e9/exchange-client:latest
    hostname: localhost
    build:
      context: ./exchange
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3001:3001"
    env_file:
      - './.envs/.production/.exchange'
    command: yarn start
    depends_on:
      - launcher-service


volumes:
  db-data: